{
    /*
     * Babel configuration specifying the presets used to transform modern JavaScript and React code.
     * 
     * Presets:
     *   - A preset is a set of plugins that determines how the code is transformed.
     *   - Babel uses these presets to understand and convert different syntax features.
     * 
     * @babel/core:
     *   - Core module that contains the main functionalities of Babel.
     *   - Responsible for parsing, transforming, and generating code.
     *   - Provides an API to customize and extend the Babel process.
     * 
     * @babel/cli:
     *   - Command-line interface for Babel, allowing developers to use Babel via terminal commands.
     *   - Enables running Babel from the command line to compile files or entire projects.
     * 
     * @babel/preset-env:
     *   - Transforms new ECMAScript 2015+ (ES6+) syntax into a backwards-compatible version of JavaScript.
     *   - Automatically applies the necessary transformations based on the target environment specified (e.g., browser versions).
     *   - Simplifies the configuration by automatically selecting the required plugins and polyfills.
     * 
     * @babel/preset-react:
     *   - Transforms JSX (JavaScript XML) syntax used in React into plain JavaScript.
     *   - Supports the creation of dynamic user interfaces by converting React components into browser-executable code.
     *
     *   - Enables features such as automatic JSX runtime support for cleaner React syntax.
     * @babel/preset-typescript:
     *   - Transforms TypeScript code into JavaScript.
     *   - Allows you to write type-safe code in TypeScript while benefiting from Babel's powerful transformation capabilities.
     *   - Supports features like stripping out TypeScript-specific syntax (e.g., type annotations) during the compilation process.
     *
     */
    "presets": ["@babel/preset-env","@babel/preset-react", "@babel/preset-typescript"]
}